import { AnyRouter } from '@trpc/server';
import { CreateTRPCNextAppRouterOptions, UseProcedureRecord } from './shared';
export declare function experimental_createTRPCNextAppDirClient<TRouter extends AnyRouter>(opts: CreateTRPCNextAppRouterOptions<TRouter>): import("@trpc/server").ProtectedIntersection<{
    use: {
        <TData extends Promise<unknown>[]>(cb: (t: UseProcedureRecord<TRouter>) => [...TData]): { [TKey in keyof TData]: import("@trpc/server").ThenArg<TData[TKey]>; };
        <TData_1 extends Promise<unknown>>(cb: (t: UseProcedureRecord<TRouter>) => TData_1): import("@trpc/server").ThenArg<TData_1>;
    };
}, UseProcedureRecord<TRouter>>;
//# sourceMappingURL=client.d.ts.map